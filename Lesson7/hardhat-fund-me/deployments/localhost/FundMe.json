{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getpriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4719fb51d7763f4cf91436b3f0321d207e4ac4f097a0680e8c50f492af638f03",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1148469",
    "logsBloom": "0x
    "blockHash": "0x7ebbe78f9050d32339d2e8734d8f065bc3088211bea03b79c1d9fcfd42ad2285",
    "transactionHash": "0x4719fb51d7763f4cf91436b3f0321d207e4ac4f097a0680e8c50f492af638f03",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1148469",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "bdb5fb9b7d87dace6770c30790c018b9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getpriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//error NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private addressToAmountFunded;\\n    address[] private funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface private priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        require(msg.sender == i_owner,\\\"NotOwner\\\");\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory temp_funders = funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < temp_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = temp_funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n      function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return addressToAmountFunded[fundingAddress];\\n    }\\n\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getpriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x2f48df713b5b8ee358b59a86780222a970aa09ba70246af312b54c2bb4806025\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb081b7a3618233e2aec6f21a76e773060faa937e85daaab6e685258c30ade119\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200146b3803806200146b83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b6112ff806200016c6000396000f3fe6080604052600436106100895760003560e01c80636b69a592116100595780636b69a5921461014c578063893d20e814610177578063b60d4288146101a2578063be2693f0146101ac578063d7b4750c146101c357610098565b80629196d7146100a25780630343fb25146100cd5780630d8e6e2c1461010a5780633ccfd60b1461013557610098565b3661009857610096610200565b005b6100a0610200565b005b3480156100ae57600080fd5b506100b761033a565b6040516100c49190610bba565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef9190610c18565b610364565b6040516101019190610c5e565b60405180910390f35b34801561011657600080fd5b5061011f6103ac565b60405161012c9190610c5e565b60405180910390f35b34801561014157600080fd5b5061014a610453565b005b34801561015857600080fd5b5061016161069e565b60405161016e9190610c5e565b60405180910390f35b34801561018357600080fd5b5061018c6106ab565b6040516101999190610c88565b60405180910390f35b6101aa610200565b005b3480156101b857600080fd5b506101c16106d5565b005b3480156101cf57600080fd5b506101ea60048036038101906101e59190610ccf565b610970565b6040516101f79190610c88565b60405180910390f35b6802b5e3af16b188000061023f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109b890919063ffffffff16565b1015610280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027790610d59565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ce9190610da8565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561041657600080fd5b505afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e9190610e13565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90610e8c565b60405180910390fd5b60005b60018054905081101561058e5760006001828154811061050957610508610eac565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061058690610edb565b9150506104e6565b50600067ffffffffffffffff8111156105aa576105a9610f24565b5b6040519080825280602002602001820160405280156105d85781602001602082028036833780820191505090505b50600190805190602001906105ee929190610a94565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161061590610f84565b60006040518083038185875af1925050503d8060008114610652576040519150601f19603f3d011682016040523d82523d6000602084013e610657565b606091505b505090508061069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290610fe5565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90610e8c565b60405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161079f575b5050505050905060005b815181101561087357600082828151811061081157610810610eac565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061086b90610edb565b9150506107f3565b50600067ffffffffffffffff81111561088f5761088e610f24565b5b6040519080825280602002602001820160405280156108bd5781602001602082028036833780820191505090505b50600190805190602001906108d3929190610a94565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161091c90610f84565b60006040518083038185875af1925050503d8060008114610959576040519150601f19603f3d011682016040523d82523d6000602084013e61095e565b606091505b505090508061096c57600080fd5b5050565b60006001828154811061098657610985610eac565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109c4836109f4565b90506000670de0b6b3a764000085836109dd9190611005565b6109e7919061108e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a3d57600080fd5b505afa158015610a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a759190611137565b5050509150506402540be40081610a8c91906111b2565b915050919050565b828054828255906000526020600020908101928215610b0d579160200282015b82811115610b0c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ab4565b5b509050610b1a9190610b1e565b5090565b5b80821115610b37576000816000905550600101610b1f565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b80610b7b610b7684610b3b565b610b5b565b610b3b565b9050919050565b6000610b9282610b65565b9050919050565b6000610ba482610b87565b9050919050565b610bb481610b99565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b600080fd5b6000610be582610b3b565b9050919050565b610bf581610bda565b8114610c0057600080fd5b50565b600081359050610c1281610bec565b92915050565b600060208284031215610c2e57610c2d610bd5565b5b6000610c3c84828501610c03565b91505092915050565b6000819050919050565b610c5881610c45565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b610c8281610bda565b82525050565b6000602082019050610c9d6000830184610c79565b92915050565b610cac81610c45565b8114610cb757600080fd5b50565b600081359050610cc981610ca3565b92915050565b600060208284031215610ce557610ce4610bd5565b5b6000610cf384828501610cba565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d43601b83610cfc565b9150610d4e82610d0d565b602082019050919050565b60006020820190508181036000830152610d7281610d36565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db382610c45565b9150610dbe83610c45565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df357610df2610d79565b5b828201905092915050565b600081519050610e0d81610ca3565b92915050565b600060208284031215610e2957610e28610bd5565b5b6000610e3784828501610dfe565b91505092915050565b7f4e6f744f776e6572000000000000000000000000000000000000000000000000600082015250565b6000610e76600883610cfc565b9150610e8182610e40565b602082019050919050565b60006020820190508181036000830152610ea581610e69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ee682610c45565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f1957610f18610d79565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f6e600083610f53565b9150610f7982610f5e565b600082019050919050565b6000610f8f82610f61565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610fcf600b83610cfc565b9150610fda82610f99565b602082019050919050565b60006020820190508181036000830152610ffe81610fc2565b9050919050565b600061101082610c45565b915061101b83610c45565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561105457611053610d79565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061109982610c45565b91506110a483610c45565b9250826110b4576110b361105f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110de816110bf565b81146110e957600080fd5b50565b6000815190506110fb816110d5565b92915050565b6000819050919050565b61111481611101565b811461111f57600080fd5b50565b6000815190506111318161110b565b92915050565b600080600080600060a0868803121561115357611152610bd5565b5b6000611161888289016110ec565b955050602061117288828901611122565b945050604061118388828901610dfe565b935050606061119488828901610dfe565b92505060806111a5888289016110ec565b9150509295509295909350565b60006111bd82611101565b91506111c883611101565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561120757611206610d79565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561124457611243610d79565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561128157611280610d79565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156112be576112bd610d79565b5b82820290509291505056fea2646970667358221220870d054119a1887c95578084ff9d84ab4b7b99cbeb05fbcdb00b1a494f3a9e6364736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100895760003560e01c80636b69a592116100595780636b69a5921461014c578063893d20e814610177578063b60d4288146101a2578063be2693f0146101ac578063d7b4750c146101c357610098565b80629196d7146100a25780630343fb25146100cd5780630d8e6e2c1461010a5780633ccfd60b1461013557610098565b3661009857610096610200565b005b6100a0610200565b005b3480156100ae57600080fd5b506100b761033a565b6040516100c49190610bba565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef9190610c18565b610364565b6040516101019190610c5e565b60405180910390f35b34801561011657600080fd5b5061011f6103ac565b60405161012c9190610c5e565b60405180910390f35b34801561014157600080fd5b5061014a610453565b005b34801561015857600080fd5b5061016161069e565b60405161016e9190610c5e565b60405180910390f35b34801561018357600080fd5b5061018c6106ab565b6040516101999190610c88565b60405180910390f35b6101aa610200565b005b3480156101b857600080fd5b506101c16106d5565b005b3480156101cf57600080fd5b506101ea60048036038101906101e59190610ccf565b610970565b6040516101f79190610c88565b60405180910390f35b6802b5e3af16b188000061023f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109b890919063ffffffff16565b1015610280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027790610d59565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ce9190610da8565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561041657600080fd5b505afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e9190610e13565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90610e8c565b60405180910390fd5b60005b60018054905081101561058e5760006001828154811061050957610508610eac565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061058690610edb565b9150506104e6565b50600067ffffffffffffffff8111156105aa576105a9610f24565b5b6040519080825280602002602001820160405280156105d85781602001602082028036833780820191505090505b50600190805190602001906105ee929190610a94565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161061590610f84565b60006040518083038185875af1925050503d8060008114610652576040519150601f19603f3d011682016040523d82523d6000602084013e610657565b606091505b505090508061069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290610fe5565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90610e8c565b60405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161079f575b5050505050905060005b815181101561087357600082828151811061081157610810610eac565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061086b90610edb565b9150506107f3565b50600067ffffffffffffffff81111561088f5761088e610f24565b5b6040519080825280602002602001820160405280156108bd5781602001602082028036833780820191505090505b50600190805190602001906108d3929190610a94565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161091c90610f84565b60006040518083038185875af1925050503d8060008114610959576040519150601f19603f3d011682016040523d82523d6000602084013e61095e565b606091505b505090508061096c57600080fd5b5050565b60006001828154811061098657610985610eac565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109c4836109f4565b90506000670de0b6b3a764000085836109dd9190611005565b6109e7919061108e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a3d57600080fd5b505afa158015610a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a759190611137565b5050509150506402540be40081610a8c91906111b2565b915050919050565b828054828255906000526020600020908101928215610b0d579160200282015b82811115610b0c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ab4565b5b509050610b1a9190610b1e565b5090565b5b80821115610b37576000816000905550600101610b1f565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b80610b7b610b7684610b3b565b610b5b565b610b3b565b9050919050565b6000610b9282610b65565b9050919050565b6000610ba482610b87565b9050919050565b610bb481610b99565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b600080fd5b6000610be582610b3b565b9050919050565b610bf581610bda565b8114610c0057600080fd5b50565b600081359050610c1281610bec565b92915050565b600060208284031215610c2e57610c2d610bd5565b5b6000610c3c84828501610c03565b91505092915050565b6000819050919050565b610c5881610c45565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b610c8281610bda565b82525050565b6000602082019050610c9d6000830184610c79565b92915050565b610cac81610c45565b8114610cb757600080fd5b50565b600081359050610cc981610ca3565b92915050565b600060208284031215610ce557610ce4610bd5565b5b6000610cf384828501610cba565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d43601b83610cfc565b9150610d4e82610d0d565b602082019050919050565b60006020820190508181036000830152610d7281610d36565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db382610c45565b9150610dbe83610c45565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df357610df2610d79565b5b828201905092915050565b600081519050610e0d81610ca3565b92915050565b600060208284031215610e2957610e28610bd5565b5b6000610e3784828501610dfe565b91505092915050565b7f4e6f744f776e6572000000000000000000000000000000000000000000000000600082015250565b6000610e76600883610cfc565b9150610e8182610e40565b602082019050919050565b60006020820190508181036000830152610ea581610e69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ee682610c45565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f1957610f18610d79565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f6e600083610f53565b9150610f7982610f5e565b600082019050919050565b6000610f8f82610f61565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610fcf600b83610cfc565b9150610fda82610f99565b602082019050919050565b60006020820190508181036000830152610ffe81610fc2565b9050919050565b600061101082610c45565b915061101b83610c45565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561105457611053610d79565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061109982610c45565b91506110a483610c45565b9250826110b4576110b361105f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110de816110bf565b81146110e957600080fd5b50565b6000815190506110fb816110d5565b92915050565b6000819050919050565b61111481611101565b811461111f57600080fd5b50565b6000815190506111318161110b565b92915050565b600080600080600060a0868803121561115357611152610bd5565b5b6000611161888289016110ec565b955050602061117288828901611122565b945050604061118388828901610dfe565b935050606061119488828901610dfe565b92505060806111a5888289016110ec565b9150509295509295909350565b60006111bd82611101565b91506111c883611101565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561120757611206610d79565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561124457611243610d79565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561128157611280610d79565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156112be576112bd610d79565b5b82820290509291505056fea2646970667358221220870d054119a1887c95578084ff9d84ab4b7b99cbeb05fbcdb00b1a494f3a9e6364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 319,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 322,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 324,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 334,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}